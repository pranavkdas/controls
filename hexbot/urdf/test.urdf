<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from bot_urdf.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="hexbot">
  <!-- the material properties are for visualisation in rviz-->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.203125 0.23828125 0.28515625 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.80078125 0.12890625 0.1328125 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- to make the hexbot controllable using ros in gazebo, we need to add a gazebo plugin -->
  <gazebo reference="fwl_joint">
    <mu1 value="10000.0"/>
    <mu2 value="10000.0"/>
    <kp value="100000.0"/>
    <kd value="0.00001"/>
    <maxVel value="1.0"/>
    <minDepth value="0.0001"/>
  </gazebo>
  <gazebo reference="fwr_joint">
    <mu1 value="10000.0"/>
    <mu2 value="10000.0"/>
    <kp value="100000.0"/>
    <kd value="0.00001"/>
    <maxVel value="1.0"/>
    <minDepth value="0.0001"/>
  </gazebo>
  <gazebo reference="bwl_joint">
    <mu1 value="10000.0"/>
    <mu2 value="10000.0"/>
    <kp value="100000.0"/>
    <kd value="0.00001"/>
    <maxVel value="1.0"/>
    <minDepth value="0.0001"/>
  </gazebo>
  <gazebo reference="bwr_joint">
    <mu1 value="10000.0"/>
    <mu2 value="10000.0"/>
    <kp value="100000.0"/>
    <kd value="0.00001"/>
    <maxVel value="1.0"/>
    <minDepth value="0.0001"/>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_planar_move.so" name="object_controller">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>
  <!--
<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <leftFrontJoint>fwl_joint</leftFrontJoint>
    <rightFrontJoint>fwr_joint</rightFrontJoint>
    <leftRearJoint>bwl_joint</leftRearJoint>
    <rightRearJoint>bwr_joint</rightRearJoint>
    <wheelSeparation>0.28</wheelSeparation>
    <wheelDiameter>0.1</wheelDiameter>
    <robotBaseFrame>link_chassis</robotBaseFrame>
    <torque>20</torque>
    <topicName>cmd_vel</topicName>
    <broadcastTF>true</broadcastTF>
  </plugin>
</gazebo> -->
  <gazebo reference="camera_sensor">
    <sensor name="camera1" type="camera">
      <update_rate>100</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>hexbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_sensor</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="sensor_laser">
    <!-- from gazebo plugins tutorial website, got the plugin for laser sensor -->
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <!-- if false, we wont be able to see the laser in gazebo -->
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle> -1.570796 </min_angle>
            <!-- 180 to 180 degree -->
            <max_angle>1.570796 </max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
          <!-- rostopic hz <topicname> for displaying publishing rate of the topic -->
        </range>
        <noise>
          <!-- rostopic echo <topicname> for displaying the data published to a topic -->
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/hexbot/laser/scan</topicName>
        <!-- Set these to the ROS topic name you would like to publish the laser scans to, and the transform frame you would like TF to use. -->
        <frameName>sensor_laser</frameName>
      </plugin>
    </sensor>
    <!-- data published to laser is an array of numbers from left extreme to right extreme with n no: of samples -->
  </gazebo>
  <!-- this is for visualisation in gazebo -->
  <gazebo reference="link_chassis">
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- body of the bot -->
  <link name="base_arm">
    <pose>0 0 0 0 0 0</pose>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
    </inertial>
    <collision name="c">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/base.dae" scale="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/base.dae" scale="0.1 0.1 0.1"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <link name="base_top">
    <pose>0 0 0 0 0 0</pose>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
    </inertial>
    <collision name="ca">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/base_top.dae" scale="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/base_top.dae" scale="0.1 0.1 0.1"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <joint name="joint_base_top" type="continuous">
    <origin rpy="0 0 0" xyz="0 0 0.048"/>
    <parent link="base_arm"/>
    <child link="base_top"/>
    <axis xyz="0 0 0.048"/>
    <limit effort="87" lower="-3.14" upper="3.14" velocity="2.3925"/>
  </joint>
  <link name="arm_lower">
    <pose>0 0 0 0 0 0</pose>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
    </inertial>
    <collision name="ca">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/lower_arm.dae" scale="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/lower_arm.dae" scale="0.1 0.1 0.1"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <joint name="joint_arm_lower" type="revolute">
    <origin rpy="0 0 0" xyz="0 0.01 0.045"/>
    <parent link="base_top"/>
    <child link="arm_lower"/>
    <axis xyz="0 0.048 0"/>
    <limit effort="87" lower="-1.4" upper="1.7" velocity="2.3925"/>
  </joint>
  <link name="arm_upper">
    <pose>0 0 0 0 0 0</pose>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
    </inertial>
    <collision name="caf">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/upper_arm.dae" scale="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/upper_arm.dae" scale="0.1 0.1 0.1"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <joint name="joint_arm_upper" type="revolute">
    <origin rpy="0 0 0" xyz="0 0.01 0.15"/>
    <parent link="arm_lower"/>
    <child link="arm_upper"/>
    <axis xyz="0 0.048 0"/>
    <limit effort="87" lower="-2.3" upper="2.3" velocity="2.3925"/>
  </joint>
  <link name="lastlink">
    <pose>0 0 0 0 0 0</pose>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
    </inertial>
    <collision name="caf">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.1 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.10 0.01"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <joint name="joint_lastlink" type="revolute">
    <origin rpy="1.5707 0 0" xyz="0 0.01 0.15"/>
    <parent link="arm_upper"/>
    <child link="lastlink"/>
    <axis xyz="0 0 -0.05"/>
    <limit effort="87" lower="-2.3" upper="2.3" velocity="2.3925"/>
  </joint>
  <link name="hand">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0010417" ixy="0" ixz="0" iyy="0.00028333" iyz="0" izz="0.0009083"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.01 0.01"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.09 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="hand_toup" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.055 0"/>
    <parent link="lastlink"/>
    <child link="hand"/>
  </joint>
  <link name="fingerleft">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0010417" ixy="0" ixz="0" iyy="0.00028333" iyz="0" izz="0.0009083"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.05 0.01"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.05 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="fing_tohand" type="prismatic">
    <origin rpy="0 0 0" xyz="-0.02 0.03 0"/>
    <parent link="hand"/>
    <child link="fingerleft"/>
    <limit effort="20" lower="0.0" upper="0.04" velocity="0.2"/>
  </joint>
  <link name="fingerright">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0010417" ixy="0" ixz="0" iyy="0.00028333" iyz="0" izz="0.0009083"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.05 0.01"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.05 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="fingr_tohand" type="prismatic">
    <origin rpy="0 0 0" xyz="0.02 0.03 0"/>
    <parent link="hand"/>
    <child link="fingerright"/>
    <limit effort="20" lower="-0.04" upper="0" velocity="0.2"/>
  </joint>
  <link name="base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0 0"/>
    <parent link="base_footprint"/>
    <child link="link_chassis"/>
  </joint>
  <!-- body of the bot -->
  <link name="link_chassis">
    <pose>0 0 0 0 0 0</pose>
    <inertial>
      <mass value="5"/>
      <origin rpy="0 0 0" xyz="0 0 0.1"/>
      <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
    </inertial>
    <collision name="collision_chassis">
      <origin rpy="0 0 0" xyz="0 0 0.1"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/bot_body_new.dae" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.1"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/bot_body_new.dae" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>
  <!-- we can call this macro as link_wheel and specify the name and other properties from the bot_urdf.xacro file -->
  <link name="fwl">
    <!-- this can be either the link_left_wheel or link_right_wheel to denote the exact same thing written bot_urdf.xacro file -->
    <inertial>
      <mass value="0.2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000526666666667" ixy="0" ixz="0" iyy="0.000526666666667" iyz="0" izz="0.001"/>
    </inertial>
    <collision name="fwl_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- wheel should be rotated around the axis-->
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </collision>
    <visual name="fwl_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </visual>
  </link>
  <joint name="fwl_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.08 0.15 0"/>
    <parent link="link_chassis"/>
    <child link="fwl"/>
    <axis xyz="0 0.05 0"/>
  </joint>
  <transmission name="fwl_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="fwl_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_fwl">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- we can call this macro as link_wheel and specify the name and other properties from the bot_urdf.xacro file -->
  <link name="fwr">
    <!-- this can be either the link_left_wheel or link_right_wheel to denote the exact same thing written bot_urdf.xacro file -->
    <inertial>
      <mass value="0.2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000526666666667" ixy="0" ixz="0" iyy="0.000526666666667" iyz="0" izz="0.001"/>
    </inertial>
    <collision name="fwr_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- wheel should be rotated around the axis-->
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </collision>
    <visual name="fwr_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </visual>
  </link>
  <joint name="fwr_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.08 -0.15 0"/>
    <parent link="link_chassis"/>
    <child link="fwr"/>
    <axis xyz="0 0.05 0"/>
  </joint>
  <transmission name="fwr_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="fwr_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_fwr">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- we can call this macro as link_wheel and specify the name and other properties from the bot_urdf.xacro file -->
  <link name="bwl">
    <!-- this can be either the link_left_wheel or link_right_wheel to denote the exact same thing written bot_urdf.xacro file -->
    <inertial>
      <mass value="0.2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000526666666667" ixy="0" ixz="0" iyy="0.000526666666667" iyz="0" izz="0.001"/>
    </inertial>
    <collision name="bwl_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- wheel should be rotated around the axis-->
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </collision>
    <visual name="bwl_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </visual>
  </link>
  <joint name="bwl_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.08 0.15 0"/>
    <parent link="link_chassis"/>
    <child link="bwl"/>
    <axis xyz="0 0.05 0"/>
  </joint>
  <transmission name="bwl_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="bwl_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_bwl">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- we can call this macro as link_wheel and specify the name and other properties from the bot_urdf.xacro file -->
  <link name="bwr">
    <!-- this can be either the link_left_wheel or link_right_wheel to denote the exact same thing written bot_urdf.xacro file -->
    <inertial>
      <mass value="0.2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000526666666667" ixy="0" ixz="0" iyy="0.000526666666667" iyz="0" izz="0.001"/>
    </inertial>
    <collision name="bwr_collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- wheel should be rotated around the axis-->
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </collision>
    <visual name="bwr_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hexbot/meshes/wheel.dae" scale="0.1 0.1 0.1"/>
        <!--<cylinder length="0.04" radius="0.05"/>-->
      </geometry>
    </visual>
  </link>
  <joint name="bwr_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.08 -0.15 0"/>
    <parent link="link_chassis"/>
    <child link="bwr"/>
    <axis xyz="0 0.05 0"/>
  </joint>
  <transmission name="bwr_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="bwr_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_bwr">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="arm_base_to_chassis" type="fixed">
    <origin rpy="0 0 0" xyz="0.0850 0.09 0.15"/>
    <parent link="link_chassis"/>
    <child link="base_arm"/>
  </joint>
  <!-- laser_sensor -->
  <link name="sensor_laser">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0010417" ixy="0" ixz="0" iyy="0.00028333" iyz="0" izz="0.0009083"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.03 0.06 0.03"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.06 0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="joint_sensor_laser" type="fixed">
    <origin rpy="0 0 0" xyz="0.15 0 0.08"/>
    <parent link="link_chassis"/>
    <child link="sensor_laser"/>
  </joint>
  <link name="sensor_laser_left">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0010417" ixy="0" ixz="0" iyy="0.00028333" iyz="0" izz="0.0009083"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.06 0.03"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.06 0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="left_sensor_joint" type="fixed">
    <origin rpy="0 0 1.5707" xyz="0 0.15 0.12"/>
    <parent link="link_chassis"/>
    <child link="sensor_laser_left"/>
  </joint>
  <!-- camera -->
  <link name="camera_sensor">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0010417" ixy="0" ixz="0" iyy="0.00028333" iyz="0" izz="0.0009083"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.03 0.03"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.06 0.03"/>
      </geometry>
    </collision>
  </link>
  <joint name="joint_camera_sensor" type="fixed">
    <origin rpy="0 0 0" xyz="0.15 0 0.13"/>
    <parent link="link_chassis"/>
    <child link="camera_sensor"/>
  </joint>
</robot>

