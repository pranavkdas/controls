<?xml version="1.0" ?>
<robot name="hexbot" xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- to make the hexbot controllable using ros in gazebo, we need to add a gazebo plugin -->
  

  <gazebo reference="fwl_joint">
      <mu1 value="10000.0" />
      <mu2 value="10000.0" />
      <kp value="100000.0" />
      <kd value="0.00001" />
      <maxVel value="1.0" />
      <minDepth value="0.0001" />
  </gazebo>    
  <gazebo reference="fwr_joint">
      <mu1 value="10000.0" />
      <mu2 value="10000.0" />
      <kp value="100000.0" />
      <kd value="0.00001" />
      <maxVel value="1.0" />
      <minDepth value="0.0001" />
  </gazebo> 
  <gazebo reference="bwl_joint">
      <mu1 value="10000.0" />
      <mu2 value="10000.0" />
      <kp value="100000.0" />
      <kd value="0.00001" />
      <maxVel value="1.0" />
      <minDepth value="0.0001" />
  </gazebo>    
  <gazebo reference="bwr_joint">
      <mu1 value="10000.0" />
      <mu2 value="10000.0" />
      <kp value="100000.0" />
      <kd value="0.00001" />
      <maxVel value="1.0" />
      <minDepth value="0.0001" />
  </gazebo>     
  
   <gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>

<!--
<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <leftFrontJoint>fwl_joint</leftFrontJoint>
    <rightFrontJoint>fwr_joint</rightFrontJoint>
    <leftRearJoint>bwl_joint</leftRearJoint>
    <rightRearJoint>bwr_joint</rightRearJoint>
    <wheelSeparation>0.28</wheelSeparation>
    <wheelDiameter>0.1</wheelDiameter>
    <robotBaseFrame>link_chassis</robotBaseFrame>
    <torque>20</torque>
    <topicName>cmd_vel</topicName>
    <broadcastTF>true</broadcastTF>
  </plugin>
</gazebo> -->

<gazebo reference="camera_sensor">
    <sensor type="camera" name="camera1">
      <update_rate>100</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>hexbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_sensor</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <gazebo reference="sensor_laser">       <!-- from gazebo plugins tutorial website, got the plugin for laser sensor -->
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>      <!-- if false, we wont be able to see the laser in gazebo -->
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle> -1.570796 </min_angle>        <!-- 180 to 180 degree -->
            <max_angle>1.570796 </max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>              <!-- rostopic hz <topicname> for displaying publishing rate of the topic -->
        </range>
        <noise>                                            <!-- rostopic echo <topicname> for displaying the data published to a topic -->
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/hexbot/laser/scan</topicName>     <!-- Set these to the ROS topic name you would like to publish the laser scans to, and the transform frame you would like TF to use. -->
        <frameName>sensor_laser</frameName>
      </plugin>
    </sensor>                <!-- data published to laser is an array of numbers from left extreme to right extreme with n no: of samples -->
  </gazebo>

  


  <!-- this is for visualisation in gazebo -->
  <gazebo reference="link_chassis">
    <material>Gazebo/Orange</material>
  </gazebo>




</robot>